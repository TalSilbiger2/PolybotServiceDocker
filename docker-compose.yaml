version: "3.8"

services:
  polybot-service:
    image: ${POLYBOT_IMG_NAME}
    container_name: polybot-container
    ports:
      - "8443:8443"
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_APP_URL=${TELEGRAM_APP_URL}
      - MONGO_URI=${MONGO_URI}
      - BUCKET_NAME=${BUCKET_NAME}
      - YOLO_PORT=${YOLO_PORT}
    depends_on:
      - yolo5-service
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongoCluster
    secrets:
      - telegram_token

  yolo5-service:
    image: ${YOLO5_IMG_NAME}
    container_name: yolo5-container
    ports:
      - "8081:8081"
    environment:
      - MONGO_URI=${MONGO_URI}
      - BUCKET_NAME=${BUCKET_NAME}
    networks:
      - mongoCluster

  mongo1:
    image: mongo:5
    container_name: mongo1
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo1
    ports:
      - "27017:27017"
    networks:
      - mongoCluster

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo2
    ports:
      - "27018:27017"
    networks:
      - mongoCluster

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo3
    ports:
      - "27019:27017"
    networks:
      - mongoCluster

  mongo-init:
    image: mongo:5
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongoCluster
    command: >
      bash -c "
      until mongo --host mongo1:27017 --eval 'db.adminCommand({ ping: 1 })' > /dev/null 2>&1; do
        echo 'Waiting for mongo1 to be ready...';
        sleep 2;
      done;
      echo 'Initializing replica set...';
      mongo --host mongo1:27017 --eval '
        rs.initiate({
          _id: \"myReplicaSet\",
          members: [
            { _id: 0, host: \"mongo1:27017\" },
            { _id: 1, host: \"mongo2:27017\" },
            { _id: 2, host: \"mongo3:27017\" }
          ]
        })';
      echo 'Replica set initialized successfully.';
      "
    restart: "no"

networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

secrets:
   telegram_token:
     file: telegram_bot_token.secret
